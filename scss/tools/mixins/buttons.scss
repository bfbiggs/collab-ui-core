/*
* @category controls
* @component button
* @design collaboration-design
*/

@import 'core';
@import 'focus';
@import 'vendor-prefixes';

@import '../../settings/buttons';

/*
* @category controls
* @component button
* @mixin button-base
* @description Create a default button base.
*
* @scss
* &#64;include cui-button-base();
*/
@mixin button-base() {
  position: relative;
  display: inline-block;
  align-items: center;
  justify-content: center;
  font-family: $brand-font-regular;
  font-size: $button__font-size;
  font-weight: normal;
  line-height: rem-calc(24);
  text-align: $button__font-align;
  text-decoration: none;
  cursor: $cursor-pointer-value;
  border: none;
  border-radius: $button__radius;
  min-width: rem-calc(72);

  // Let inner spans keep button font size
  > * {
    font-size: inherit;
  }

  .#{$button__class}__children {
    @include flex;
  }
  
  +.#{$button__class} {
    margin-left: rem-calc(5);
  }

  &:active,
  &.active-state {
    &:focus,
    &.focus-state {
      box-shadow: none;
    }
  }

  &.disabled,
  &.cui-button--disabled,
  &[disabled] {
    cursor: $button__cursor--disabled;
    box-shadow:none;

    &:hover,
    &:focus {
      box-shadow: none;
    }
  }
}


/*
* @category controls
* @component button
* @mixin button-size
* @description Add button size styles
* @parameter $full-width | boolean | Set $full-width:true to remove side padding extend width | false
* @parmeter $size | string | One of: [regular, large] | regular
* @parmeter $radius | number | Defines button radius
*
* @scss
* &#64;include cui-button-size($full-width , $size, $radius);
*/
@mixin button-size(
  $size: regular, 
  $full-width: false, 
  $radius: $button__radius,
  $padding: ($button__padding--vertical $button__padding--horizontal)
) {
  padding: $padding;
  font-size: $button__font-size;
  @include radius($radius);

  @if $size==large {
    padding: $button__padding--vertical--large $button__padding--horizontal--large;
  }


  // Set $full-width:true to remove side padding extend width.
  @if $full-width {
    width: 100%;
  }
}

/*
* @category controls
* @component button
* @mixin button-color
* @description Add button color styles
* @parameter $color | color | Font color. | $black
* @parameter $color-disabled | Font color | Disabled Font color. | $black
* @parameter $bg | color | Background color | $button__background-color
* @parameter $bg-disabled | color | Disabled background color | $button__background-color--disabled
* @parameter $bg-hover | color | Button Hover Background Color. | $button__background-color--hover
* @parameter $bg-active | color | Button Active Background Color. | $button__background-color--active
* @parameter $border-focus | color | Button Border Color. | $button__border-color--focus
* @parameter $disabled | boolean | Set $disabled:true to create a disabled transparent button | true
* @parameter $focus | boolean | Set $focus:true to create a button focus states | true
*
* @scss
* &#64;include button-color($color, $color-disabled, $bg, $bg-disabled, $bg-hover, $bg-active, $border-focus, $focus, $disabled);
*/
@mixin button-color(
  $color: $button__font-color,
  $color-hover: $color,
  $color-active: $color,
  $color-disabled: $button__font-color--disabled,
  $bg: $button__background-color,
  $bg-active: $button__background-color--active,
  $bg-disabled: $button__color--disabled,
  $bg-hover: $button__background-color--hover,
  $border-focus: $button__border-color--focus,
  $disabled: true,
  $focus: false
) {
  color: $color;
  background-color: $bg;
  border-color: transparent;

  @if $disabled {
    @include button-color-disabled($color: $color-disabled, $bg: $bg-disabled);
  }

  @if $focus {
    @include button-color-focus($border-focus)
  }

  &:hover,
  &.hover-state {
    color: $color-hover;
    background-color: $bg-hover;
  }

  &:active,
  &.active-state {
    color: $color-active;
    background-color: $bg-active;
  }
}

/*
* @category controls
* @component button
* @mixin button-color-focus
* @description Add button focus color style
* @parameter $border-color-focus | color | Button Border Color. | $button__border-color--focus
*
* @scss
* &#64;include button-focus-color($color);
*/
@mixin button-color-focus(
  $color: $button__border-color--focus
) {
  &:focus,
  &.focus-state {
    @include focus-color($color: $color);
  }
}
/*
* @category controls
* @component button
* @mixin button-color-disabled
* @description Add disabled button color styles
* @parameter $color | color | Font color. | $black
* @parameter $bg | color | Background color | $button__background-color
*
* @scss
* &#64;include button-color-disabled($color, $bg);
*/
@mixin button-color-disabled($color: $button__font-color--disabled, $bg: $button__color--disabled) {
  &.disabled,
  &.cui-button--disabled,
  &[disabled] {
    color: $color;
    fill: $color;
    background-color: $bg;

    &:hover,
    &:focus {
      color: $color;
      fill: $color;
      background-color: $bg;
    }
  }
}

/*
* @category controls
* @component button
* @mixin button
* @description Quickly create buttons with a single mixin
* @parameter $color | color | Font color | $black
* @parameter $bg | color | Background color | $button__background-color
* @parameter $bg-hover | color | Button Hover Background Color. | $button__background-color--hover
* @parameter $bg-active | color | Button Active Background Color | $button__background-color--active
* @parameter $border-focus | color | Button Focus Border Color. | $button__border-color--focus
* @parameter $radius | number | If true, set to button radius which is $global-radius || explicitly set radius amount in px (ex. $radius:10px) | false
* @parameter $full-width | boolean | Set $full-width:true to remove side padding extend width | false
* @parameter $disabled | boolean | Set $disabled:true to create a disabled transparent button | true
* @parameter $focus | boolean | Set $focus:true to create a button focus states | true
*
* @scss
* &#64;include button($color, $bg, $bg-disabled, $bg-hover, $bg-active, $border-focus, $color-disabled, $radius, $full-width, $disabled, $focus);
*/
@mixin button(
  $bg:$button__background-color,
  $bg-disabled: $button__color--disabled,
  $bg-hover:$button__background-color--hover,
  $bg-active:$button__background-color--active,
  $border-focus:$button__border-color--focus,
  $color:$button__font-color,
  $color-disabled: $button__font-color--disabled,
  $radius:false,
  $full-width: false,
  $focus: false,
  $disabled:true
) {
  @include button-base;
  @include button-size($padding, $full-width, $radius);
  @include button-color($color, $color-disabled, $bg,  $bg-active, $bg-disabled, $bg-hover, $border-focus, $disabled, $focus);
  @include single-transition(background-color, $button__transition-speed, ease);
}
