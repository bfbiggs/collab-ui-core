/*
* @category communication
* @component badge
* @design collaboration-design
*/

@import 'core';
@import '../../settings/badges';

/*
* @category communication
* @component badge
* @mixin cui-badge-base
* @description Create a default badge base.
*
* @scss
* &#64;include cui-badge-base();
*/
@mixin cui-badge-base() {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: rem-calc(20);
  font-family: $cui-badge__font-family;
  font-weight: $cui-badge__font-weight;
  line-height: $cui-badge__font-line-height;
  margin-bottom: auto;
  position: relative;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
}


/*
* @category communication
* @component badge
* @mixin cui-badge-size
* @description Add badge size styles
* @parameter $padding - Used to build padding for badge Default: $cui-badge__padding
* @parameter $text-width - width of the font
*
* @scss
* &#64;include cui-badge-size($padding, $text-size);
*/
@mixin cui-badge-size($padding:$cui-badge__padding, $text-size:$cui-badge__font-size) {
  @if $padding { padding: $padding; }
  @if $text-size { font-size: $text-size; }
}


/*
* @category communication
* @component badge
* @mixin cui-badge-style
* @description Add badge color styles
* @parameter $bg - Background color. We can set $bg:false for a transparent background. Default: $cui-badge--blue__background-color.
* @parameter $radius - If true, set to badge radius which is $button-radius || explicitly set radius amount in px (ex. $radius:10px). Default: false
* @parameter $color - default to $cui-badge__font-color
* @scss
* &#64;include cui-badge-style($bg, $radius);
*/
@mixin cui-badge-style($bg:$cui-badge--blue__background-color, $radius:false, $color: $cui-badge__font-color) {
  // We control which background color comes through
  @if $bg {

        // This find the lightness percentage of the background color.
        $bg-lightness: lightness($bg);

        background-color: $bg;

        @if $color { color: $color }
      }

      // We use this to control the radius on labels.
      @if $radius == true { @include radius($cui-badge__radius); }
      @else if $radius { @include radius($radius); }
}

/*
* @category communication
* @component badge
* @mixin cui-badge-outline-style
* @description Add badge outline styles
* @parameter $bc - border color and color.
* @parameter $radius - If true, set to badge radius which is $button-radius || explicitly set radius amount in px (ex. $radius:10px). Default: false
* @paramater $bg - set the background color
*
* @scss
* &#64;include cui-badge-outline-style($bg, $radius);
*/
@mixin cui-badge-outline-style($bc: $cui-badge--blue__background-color, $radius: false, $bg: transparent) {
  @if $bc {
    border: 1px solid $bc;
    color: $bc;
  }

  background-color: $bg;
}


/*
* @category communication
* @component badge
* @mixin cui-badge
* @description Quickly create badge with a single mixin
* $padding - Used to build padding for badge Default: $button-med ||= rem-calc(16)
* $text-width - width of the font
* $bg - Background color. We can set $bg:false for a transparent background. Default: $cui-badge--blue__background-color.
* $radius - If true, set to badge radius which is $button-radius || explicitly set radius amount in px (ex. $radius:10px). Default: false
*
* @scss
* &#64;include cui-badge($padding, $text-size, $bg, $radius);
*/
@mixin cui-badge($padding:$cui-badge__padding, $text-size:$cui-badge__font-size, $bg:$cui-badge--blue__background-color, $radius:false) {
  @include cui-badge-base;
  @include cui-badge-size($padding, $text-size);
  @include cui-badge-style($bg, $radius);
}


@mixin cui-badge-variant($color) {
  background-color: $color;

  &[href] {
    &:hover,
    &:focus {
      background-color: darken($color, 10%);
    }
  }
}
